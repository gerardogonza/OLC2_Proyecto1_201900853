// Code generated from ChemsLexer.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 56, 363,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3,
	7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3,
	9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12,
	3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3,
	15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16,
	3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3,
	18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21,
	3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3,
	22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24,
	3, 24, 3, 25, 6, 25, 233, 10, 25, 13, 25, 14, 25, 234, 3, 26, 6, 26, 238,
	10, 26, 13, 26, 14, 26, 239, 3, 26, 3, 26, 6, 26, 244, 10, 26, 13, 26,
	14, 26, 245, 3, 27, 3, 27, 7, 27, 250, 10, 27, 12, 27, 14, 27, 253, 11,
	27, 3, 27, 3, 27, 3, 28, 3, 28, 7, 28, 259, 10, 28, 12, 28, 14, 28, 262,
	11, 28, 3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 3, 31, 3, 32, 3, 32, 3, 33,
	3, 33, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 36, 3, 36, 3, 36, 3, 37, 3,
	37, 3, 37, 3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 40, 3, 40, 3, 41, 3, 41,
	3, 42, 3, 42, 3, 43, 3, 43, 3, 44, 3, 44, 3, 45, 3, 45, 3, 46, 3, 46, 3,
	47, 3, 47, 3, 48, 3, 48, 3, 49, 3, 49, 3, 50, 3, 50, 3, 51, 3, 51, 3, 52,
	3, 52, 3, 52, 3, 53, 3, 53, 3, 53, 3, 54, 3, 54, 3, 54, 7, 54, 323, 10,
	54, 12, 54, 14, 54, 326, 11, 54, 3, 54, 6, 54, 329, 10, 54, 13, 54, 14,
	54, 330, 3, 54, 3, 54, 7, 54, 335, 10, 54, 12, 54, 14, 54, 338, 11, 54,
	3, 54, 6, 54, 341, 10, 54, 13, 54, 14, 54, 342, 7, 54, 345, 10, 54, 12,
	54, 14, 54, 348, 11, 54, 3, 54, 3, 54, 3, 54, 3, 54, 3, 55, 6, 55, 355,
	10, 55, 13, 55, 14, 55, 356, 3, 55, 3, 55, 3, 56, 3, 56, 3, 56, 2, 2, 57,
	3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23,
	13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41,
	22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59,
	31, 61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 37, 73, 38, 75, 39, 77,
	40, 79, 41, 81, 42, 83, 43, 85, 44, 87, 45, 89, 46, 91, 47, 93, 48, 95,
	49, 97, 50, 99, 51, 101, 52, 103, 53, 105, 54, 107, 55, 109, 56, 111, 2,
	3, 2, 12, 3, 2, 50, 59, 3, 2, 36, 36, 5, 2, 67, 92, 97, 97, 99, 124, 6,
	2, 50, 59, 67, 92, 97, 97, 99, 124, 3, 2, 49, 49, 3, 2, 44, 44, 4, 2, 44,
	44, 96, 96, 5, 2, 44, 44, 49, 49, 96, 96, 6, 2, 11, 12, 15, 15, 34, 34,
	94, 94, 9, 2, 34, 35, 37, 37, 45, 45, 47, 48, 60, 60, 66, 66, 93, 95, 2,
	372, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2,
	2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3,
	2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25,
	3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2,
	33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2,
	2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2,
	2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2,
	2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3,
	2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71,
	3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2,
	79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2,
	2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2, 2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2,
	2, 2, 95, 3, 2, 2, 2, 2, 97, 3, 2, 2, 2, 2, 99, 3, 2, 2, 2, 2, 101, 3,
	2, 2, 2, 2, 103, 3, 2, 2, 2, 2, 105, 3, 2, 2, 2, 2, 107, 3, 2, 2, 2, 2,
	109, 3, 2, 2, 2, 3, 113, 3, 2, 2, 2, 5, 121, 3, 2, 2, 2, 7, 128, 3, 2,
	2, 2, 9, 135, 3, 2, 2, 2, 11, 138, 3, 2, 2, 2, 13, 143, 3, 2, 2, 2, 15,
	149, 3, 2, 2, 2, 17, 153, 3, 2, 2, 2, 19, 158, 3, 2, 2, 2, 21, 162, 3,
	2, 2, 2, 23, 166, 3, 2, 2, 2, 25, 170, 3, 2, 2, 2, 27, 174, 3, 2, 2, 2,
	29, 177, 3, 2, 2, 2, 31, 182, 3, 2, 2, 2, 33, 188, 3, 2, 2, 2, 35, 194,
	3, 2, 2, 2, 37, 199, 3, 2, 2, 2, 39, 203, 3, 2, 2, 2, 41, 208, 3, 2, 2,
	2, 43, 218, 3, 2, 2, 2, 45, 224, 3, 2, 2, 2, 47, 228, 3, 2, 2, 2, 49, 232,
	3, 2, 2, 2, 51, 237, 3, 2, 2, 2, 53, 247, 3, 2, 2, 2, 55, 256, 3, 2, 2,
	2, 57, 263, 3, 2, 2, 2, 59, 265, 3, 2, 2, 2, 61, 267, 3, 2, 2, 2, 63, 269,
	3, 2, 2, 2, 65, 271, 3, 2, 2, 2, 67, 273, 3, 2, 2, 2, 69, 276, 3, 2, 2,
	2, 71, 278, 3, 2, 2, 2, 73, 281, 3, 2, 2, 2, 75, 284, 3, 2, 2, 2, 77, 287,
	3, 2, 2, 2, 79, 289, 3, 2, 2, 2, 81, 291, 3, 2, 2, 2, 83, 293, 3, 2, 2,
	2, 85, 295, 3, 2, 2, 2, 87, 297, 3, 2, 2, 2, 89, 299, 3, 2, 2, 2, 91, 301,
	3, 2, 2, 2, 93, 303, 3, 2, 2, 2, 95, 305, 3, 2, 2, 2, 97, 307, 3, 2, 2,
	2, 99, 309, 3, 2, 2, 2, 101, 311, 3, 2, 2, 2, 103, 313, 3, 2, 2, 2, 105,
	316, 3, 2, 2, 2, 107, 319, 3, 2, 2, 2, 109, 354, 3, 2, 2, 2, 111, 360,
	3, 2, 2, 2, 113, 114, 7, 114, 2, 2, 114, 115, 7, 116, 2, 2, 115, 116, 7,
	107, 2, 2, 116, 117, 7, 112, 2, 2, 117, 118, 7, 118, 2, 2, 118, 119, 7,
	110, 2, 2, 119, 120, 7, 112, 2, 2, 120, 4, 3, 2, 2, 2, 121, 122, 7, 112,
	2, 2, 122, 123, 7, 119, 2, 2, 123, 124, 7, 111, 2, 2, 124, 125, 7, 100,
	2, 2, 125, 126, 7, 103, 2, 2, 126, 127, 7, 116, 2, 2, 127, 6, 3, 2, 2,
	2, 128, 129, 7, 117, 2, 2, 129, 130, 7, 118, 2, 2, 130, 131, 7, 116, 2,
	2, 131, 132, 7, 107, 2, 2, 132, 133, 7, 112, 2, 2, 133, 134, 7, 105, 2,
	2, 134, 8, 3, 2, 2, 2, 135, 136, 7, 107, 2, 2, 136, 137, 7, 104, 2, 2,
	137, 10, 3, 2, 2, 2, 138, 139, 7, 103, 2, 2, 139, 140, 7, 110, 2, 2, 140,
	141, 7, 117, 2, 2, 141, 142, 7, 103, 2, 2, 142, 12, 3, 2, 2, 2, 143, 144,
	7, 121, 2, 2, 144, 145, 7, 106, 2, 2, 145, 146, 7, 107, 2, 2, 146, 147,
	7, 110, 2, 2, 147, 148, 7, 103, 2, 2, 148, 14, 3, 2, 2, 2, 149, 150, 7,
	114, 2, 2, 150, 151, 7, 113, 2, 2, 151, 152, 7, 121, 2, 2, 152, 16, 3,
	2, 2, 2, 153, 154, 7, 114, 2, 2, 154, 155, 7, 113, 2, 2, 155, 156, 7, 121,
	2, 2, 156, 157, 7, 104, 2, 2, 157, 18, 3, 2, 2, 2, 158, 159, 7, 107, 2,
	2, 159, 160, 7, 56, 2, 2, 160, 161, 7, 54, 2, 2, 161, 20, 3, 2, 2, 2, 162,
	163, 7, 104, 2, 2, 163, 164, 7, 56, 2, 2, 164, 165, 7, 54, 2, 2, 165, 22,
	3, 2, 2, 2, 166, 167, 7, 110, 2, 2, 167, 168, 7, 103, 2, 2, 168, 169, 7,
	118, 2, 2, 169, 24, 3, 2, 2, 2, 170, 171, 7, 111, 2, 2, 171, 172, 7, 119,
	2, 2, 172, 173, 7, 118, 2, 2, 173, 26, 3, 2, 2, 2, 174, 175, 7, 99, 2,
	2, 175, 176, 7, 117, 2, 2, 176, 28, 3, 2, 2, 2, 177, 178, 7, 118, 2, 2,
	178, 179, 7, 116, 2, 2, 179, 180, 7, 119, 2, 2, 180, 181, 7, 103, 2, 2,
	181, 30, 3, 2, 2, 2, 182, 183, 7, 104, 2, 2, 183, 184, 7, 99, 2, 2, 184,
	185, 7, 110, 2, 2, 185, 186, 7, 117, 2, 2, 186, 187, 7, 103, 2, 2, 187,
	32, 3, 2, 2, 2, 188, 189, 7, 111, 2, 2, 189, 190, 7, 99, 2, 2, 190, 191,
	7, 118, 2, 2, 191, 192, 7, 101, 2, 2, 192, 193, 7, 106, 2, 2, 193, 34,
	3, 2, 2, 2, 194, 195, 7, 110, 2, 2, 195, 196, 7, 113, 2, 2, 196, 197, 7,
	113, 2, 2, 197, 198, 7, 114, 2, 2, 198, 36, 3, 2, 2, 2, 199, 200, 7, 99,
	2, 2, 200, 201, 7, 100, 2, 2, 201, 202, 7, 117, 2, 2, 202, 38, 3, 2, 2,
	2, 203, 204, 7, 117, 2, 2, 204, 205, 7, 115, 2, 2, 205, 206, 7, 116, 2,
	2, 206, 207, 7, 118, 2, 2, 207, 40, 3, 2, 2, 2, 208, 209, 7, 118, 2, 2,
	209, 210, 7, 113, 2, 2, 210, 211, 7, 97, 2, 2, 211, 212, 7, 117, 2, 2,
	212, 213, 7, 118, 2, 2, 213, 214, 7, 116, 2, 2, 214, 215, 7, 107, 2, 2,
	215, 216, 7, 112, 2, 2, 216, 217, 7, 105, 2, 2, 217, 42, 3, 2, 2, 2, 218,
	219, 7, 101, 2, 2, 219, 220, 7, 110, 2, 2, 220, 221, 7, 113, 2, 2, 221,
	222, 7, 112, 2, 2, 222, 223, 7, 103, 2, 2, 223, 44, 3, 2, 2, 2, 224, 225,
	7, 104, 2, 2, 225, 226, 7, 113, 2, 2, 226, 227, 7, 116, 2, 2, 227, 46,
	3, 2, 2, 2, 228, 229, 7, 107, 2, 2, 229, 230, 7, 112, 2, 2, 230, 48, 3,
	2, 2, 2, 231, 233, 9, 2, 2, 2, 232, 231, 3, 2, 2, 2, 233, 234, 3, 2, 2,
	2, 234, 232, 3, 2, 2, 2, 234, 235, 3, 2, 2, 2, 235, 50, 3, 2, 2, 2, 236,
	238, 9, 2, 2, 2, 237, 236, 3, 2, 2, 2, 238, 239, 3, 2, 2, 2, 239, 237,
	3, 2, 2, 2, 239, 240, 3, 2, 2, 2, 240, 241, 3, 2, 2, 2, 241, 243, 7, 48,
	2, 2, 242, 244, 9, 2, 2, 2, 243, 242, 3, 2, 2, 2, 244, 245, 3, 2, 2, 2,
	245, 243, 3, 2, 2, 2, 245, 246, 3, 2, 2, 2, 246, 52, 3, 2, 2, 2, 247, 251,
	7, 36, 2, 2, 248, 250, 10, 3, 2, 2, 249, 248, 3, 2, 2, 2, 250, 253, 3,
	2, 2, 2, 251, 249, 3, 2, 2, 2, 251, 252, 3, 2, 2, 2, 252, 254, 3, 2, 2,
	2, 253, 251, 3, 2, 2, 2, 254, 255, 7, 36, 2, 2, 255, 54, 3, 2, 2, 2, 256,
	260, 9, 4, 2, 2, 257, 259, 9, 5, 2, 2, 258, 257, 3, 2, 2, 2, 259, 262,
	3, 2, 2, 2, 260, 258, 3, 2, 2, 2, 260, 261, 3, 2, 2, 2, 261, 56, 3, 2,
	2, 2, 262, 260, 3, 2, 2, 2, 263, 264, 7, 48, 2, 2, 264, 58, 3, 2, 2, 2,
	265, 266, 7, 61, 2, 2, 266, 60, 3, 2, 2, 2, 267, 268, 7, 46, 2, 2, 268,
	62, 3, 2, 2, 2, 269, 270, 7, 60, 2, 2, 270, 64, 3, 2, 2, 2, 271, 272, 7,
	35, 2, 2, 272, 66, 3, 2, 2, 2, 273, 274, 7, 35, 2, 2, 274, 275, 7, 63,
	2, 2, 275, 68, 3, 2, 2, 2, 276, 277, 7, 63, 2, 2, 277, 70, 3, 2, 2, 2,
	278, 279, 7, 63, 2, 2, 279, 280, 7, 63, 2, 2, 280, 72, 3, 2, 2, 2, 281,
	282, 7, 64, 2, 2, 282, 283, 7, 63, 2, 2, 283, 74, 3, 2, 2, 2, 284, 285,
	7, 62, 2, 2, 285, 286, 7, 63, 2, 2, 286, 76, 3, 2, 2, 2, 287, 288, 7, 64,
	2, 2, 288, 78, 3, 2, 2, 2, 289, 290, 7, 62, 2, 2, 290, 80, 3, 2, 2, 2,
	291, 292, 7, 44, 2, 2, 292, 82, 3, 2, 2, 2, 293, 294, 7, 49, 2, 2, 294,
	84, 3, 2, 2, 2, 295, 296, 7, 39, 2, 2, 296, 86, 3, 2, 2, 2, 297, 298, 7,
	45, 2, 2, 298, 88, 3, 2, 2, 2, 299, 300, 7, 47, 2, 2, 300, 90, 3, 2, 2,
	2, 301, 302, 7, 42, 2, 2, 302, 92, 3, 2, 2, 2, 303, 304, 7, 43, 2, 2, 304,
	94, 3, 2, 2, 2, 305, 306, 7, 125, 2, 2, 306, 96, 3, 2, 2, 2, 307, 308,
	7, 127, 2, 2, 308, 98, 3, 2, 2, 2, 309, 310, 7, 93, 2, 2, 310, 100, 3,
	2, 2, 2, 311, 312, 7, 95, 2, 2, 312, 102, 3, 2, 2, 2, 313, 314, 7, 126,
	2, 2, 314, 315, 7, 126, 2, 2, 315, 104, 3, 2, 2, 2, 316, 317, 7, 40, 2,
	2, 317, 318, 7, 40, 2, 2, 318, 106, 3, 2, 2, 2, 319, 320, 9, 6, 2, 2, 320,
	324, 9, 7, 2, 2, 321, 323, 9, 8, 2, 2, 322, 321, 3, 2, 2, 2, 323, 326,
	3, 2, 2, 2, 324, 322, 3, 2, 2, 2, 324, 325, 3, 2, 2, 2, 325, 328, 3, 2,
	2, 2, 326, 324, 3, 2, 2, 2, 327, 329, 9, 7, 2, 2, 328, 327, 3, 2, 2, 2,
	329, 330, 3, 2, 2, 2, 330, 328, 3, 2, 2, 2, 330, 331, 3, 2, 2, 2, 331,
	346, 3, 2, 2, 2, 332, 336, 9, 9, 2, 2, 333, 335, 9, 8, 2, 2, 334, 333,
	3, 2, 2, 2, 335, 338, 3, 2, 2, 2, 336, 334, 3, 2, 2, 2, 336, 337, 3, 2,
	2, 2, 337, 340, 3, 2, 2, 2, 338, 336, 3, 2, 2, 2, 339, 341, 9, 7, 2, 2,
	340, 339, 3, 2, 2, 2, 341, 342, 3, 2, 2, 2, 342, 340, 3, 2, 2, 2, 342,
	343, 3, 2, 2, 2, 343, 345, 3, 2, 2, 2, 344, 332, 3, 2, 2, 2, 345, 348,
	3, 2, 2, 2, 346, 344, 3, 2, 2, 2, 346, 347, 3, 2, 2, 2, 347, 349, 3, 2,
	2, 2, 348, 346, 3, 2, 2, 2, 349, 350, 9, 6, 2, 2, 350, 351, 3, 2, 2, 2,
	351, 352, 8, 54, 2, 2, 352, 108, 3, 2, 2, 2, 353, 355, 9, 10, 2, 2, 354,
	353, 3, 2, 2, 2, 355, 356, 3, 2, 2, 2, 356, 354, 3, 2, 2, 2, 356, 357,
	3, 2, 2, 2, 357, 358, 3, 2, 2, 2, 358, 359, 8, 55, 2, 2, 359, 110, 3, 2,
	2, 2, 360, 361, 7, 94, 2, 2, 361, 362, 9, 11, 2, 2, 362, 112, 3, 2, 2,
	2, 14, 2, 234, 239, 245, 251, 260, 324, 330, 336, 342, 346, 356, 3, 8,
	2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'println'", "'number'", "'string'", "'if'", "'else'", "'while'", "'pow'",
	"'powf'", "'i64'", "'f64'", "'let'", "'mut'", "'as'", "'true'", "'false'",
	"'match'", "'loop'", "'abs'", "'sqrt'", "'to_string'", "'clone'", "'for'",
	"'in'", "", "", "", "", "'.'", "';'", "','", "':'", "'!'", "'!='", "'='",
	"'=='", "'>='", "'<='", "'>'", "'<'", "'*'", "'/'", "'%'", "'+'", "'-'",
	"'('", "')'", "'{'", "'}'", "'['", "']'", "'||'", "'&&'",
}

var lexerSymbolicNames = []string{
	"", "PRINTLN", "P_NUMBER", "P_STRING", "P_IF", "P_ELSE", "P_WHILE", "P_POW",
	"P_POWF", "P_I64", "P_F64", "P_LET", "P_MUT", "P_AS", "P_TRUE", "P_FALSE",
	"P_MATCH", "P_LOOP", "P_ABS", "P_SQRT", "P_TOSTRING", "P_CLONE", "P_FOR",
	"P_IN", "NUMBER", "DECIMAL", "STRING", "ID", "PUNTO", "PTCOMA", "COMA",
	"DOSPUNTOS", "DIFERENTE", "DIFERENTEDE", "IGUAL", "IGUALIGUA", "MAYORIGUAL",
	"MENORIGUAL", "MAYOR", "MENOR", "MUL", "DIV", "MODULO", "ADD", "SUB", "PARIZQ",
	"PARDER", "LLAVEIZQ", "LLAVEDER", "CORIZQ", "CORDER", "OR", "AND", "MULTICOMENT",
	"WHITESPACE",
}

var lexerRuleNames = []string{
	"PRINTLN", "P_NUMBER", "P_STRING", "P_IF", "P_ELSE", "P_WHILE", "P_POW",
	"P_POWF", "P_I64", "P_F64", "P_LET", "P_MUT", "P_AS", "P_TRUE", "P_FALSE",
	"P_MATCH", "P_LOOP", "P_ABS", "P_SQRT", "P_TOSTRING", "P_CLONE", "P_FOR",
	"P_IN", "NUMBER", "DECIMAL", "STRING", "ID", "PUNTO", "PTCOMA", "COMA",
	"DOSPUNTOS", "DIFERENTE", "DIFERENTEDE", "IGUAL", "IGUALIGUA", "MAYORIGUAL",
	"MENORIGUAL", "MAYOR", "MENOR", "MUL", "DIV", "MODULO", "ADD", "SUB", "PARIZQ",
	"PARDER", "LLAVEIZQ", "LLAVEDER", "CORIZQ", "CORDER", "OR", "AND", "MULTICOMENT",
	"WHITESPACE", "ESC_SEQ",
}

type ChemsLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewChemsLexer(input antlr.CharStream) *ChemsLexer {

	l := new(ChemsLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ChemsLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ChemsLexer tokens.
const (
	ChemsLexerPRINTLN     = 1
	ChemsLexerP_NUMBER    = 2
	ChemsLexerP_STRING    = 3
	ChemsLexerP_IF        = 4
	ChemsLexerP_ELSE      = 5
	ChemsLexerP_WHILE     = 6
	ChemsLexerP_POW       = 7
	ChemsLexerP_POWF      = 8
	ChemsLexerP_I64       = 9
	ChemsLexerP_F64       = 10
	ChemsLexerP_LET       = 11
	ChemsLexerP_MUT       = 12
	ChemsLexerP_AS        = 13
	ChemsLexerP_TRUE      = 14
	ChemsLexerP_FALSE     = 15
	ChemsLexerP_MATCH     = 16
	ChemsLexerP_LOOP      = 17
	ChemsLexerP_ABS       = 18
	ChemsLexerP_SQRT      = 19
	ChemsLexerP_TOSTRING  = 20
	ChemsLexerP_CLONE     = 21
	ChemsLexerP_FOR       = 22
	ChemsLexerP_IN        = 23
	ChemsLexerNUMBER      = 24
	ChemsLexerDECIMAL     = 25
	ChemsLexerSTRING      = 26
	ChemsLexerID          = 27
	ChemsLexerPUNTO       = 28
	ChemsLexerPTCOMA      = 29
	ChemsLexerCOMA        = 30
	ChemsLexerDOSPUNTOS   = 31
	ChemsLexerDIFERENTE   = 32
	ChemsLexerDIFERENTEDE = 33
	ChemsLexerIGUAL       = 34
	ChemsLexerIGUALIGUA   = 35
	ChemsLexerMAYORIGUAL  = 36
	ChemsLexerMENORIGUAL  = 37
	ChemsLexerMAYOR       = 38
	ChemsLexerMENOR       = 39
	ChemsLexerMUL         = 40
	ChemsLexerDIV         = 41
	ChemsLexerMODULO      = 42
	ChemsLexerADD         = 43
	ChemsLexerSUB         = 44
	ChemsLexerPARIZQ      = 45
	ChemsLexerPARDER      = 46
	ChemsLexerLLAVEIZQ    = 47
	ChemsLexerLLAVEDER    = 48
	ChemsLexerCORIZQ      = 49
	ChemsLexerCORDER      = 50
	ChemsLexerOR          = 51
	ChemsLexerAND         = 52
	ChemsLexerMULTICOMENT = 53
	ChemsLexerWHITESPACE  = 54
)
